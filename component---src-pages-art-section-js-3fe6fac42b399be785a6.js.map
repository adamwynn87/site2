{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es6.array.find.js","webpack:///./src/pages/art-section.js"],"names":["$export","$find","forced","Array","P","F","find","callbackfn","this","arguments","length","undefined","RootIndex","render","siteTitle","get","posts","pageId","props","location","search","slice","post","i","node","id","arts","pageArts","filter","artCategory","style","background","title","className","name","map","key","to","slug","React","Component","pageQuery"],"mappings":"2FAEA,IAAIA,EAAU,EAAQ,QAClBC,EAAQ,EAAQ,OAAR,CAA4B,GAEpCC,GAAS,EADH,QAGC,IAAIC,MAAM,GAAM,MAAE,WAAcD,GAAS,KACpDF,EAAQA,EAAQI,EAAIJ,EAAQK,EAAIH,EAAQ,QAAS,CAC/CI,KAAM,SAAcC,GAClB,OAAON,EAAMO,KAAMD,EAAYE,UAAUC,OAAS,EAAID,UAAU,QAAKE,MAGzE,EAAQ,OAAR,CATU,S,+OCIJC,G,oGACJC,OAAA,WACE,IAAMC,EAAYC,IAAIP,KAAM,sCACtBQ,EAAQD,IAAIP,KAAM,6CAClBS,EAAST,KAAKU,MAAMC,SAASC,OAAOC,MAAM,GAC5CC,EAAON,EAAMV,MAAK,SAAAiB,GAAC,OAAIA,EAAEC,KAAKC,KAAOR,MAAWD,EAAM,GAC1DM,EAAOA,EAAOA,EAAKE,KAAO,KAE1B,IAAME,EAAOX,IAAIP,KAAM,yCACjBmB,EAAWD,EAAKE,QAAO,SAAAL,GAAC,OAAIA,EAAEC,KAAKK,YAAYJ,KAAOR,MAAWS,EAAK,GAE5E,OACE,kBAAC,IAAD,CAAQP,SAAUX,KAAKU,MAAMC,UAC3B,yBAAKW,MAAO,CAAEC,WAAY,SACxB,kBAAC,IAAD,CAAQC,MAAOlB,IACf,yBAAKmB,UAAU,WACb,wBAAIA,UAAU,oBAAoBX,EAAKY,MACvC,wBAAID,UAAU,gBACXN,EAASQ,KAAI,YAAe,IAAZX,EAAW,EAAXA,KACf,OACE,wBAAIY,IAAKZ,EAAKC,IACZ,kBAAC,IAAD,CAAMY,GAAE,QAAUb,EAAKc,MAASd,EAAKQ,gB,GArBjCO,IAAMC,YAiCf5B,YAER,IAAM6B,EAAS","file":"component---src-pages-art-section-js-3fe6fac42b399be785a6.js","sourcesContent":["'use strict';\n// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)\nvar $export = require('./_export');\nvar $find = require('./_array-methods')(5);\nvar KEY = 'find';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n$export($export.P + $export.F * forced, 'Array', {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\nrequire('./_add-to-unscopables')(KEY);\n","import React from 'react'\nimport { graphql, Link } from 'gatsby'\nimport get from 'lodash/get'\nimport Helmet from 'react-helmet'\nimport Hero from '../components/hero'\nimport Layout from '../components/layout'\nimport ArticlePreview from '../components/article-preview'\n\nclass RootIndex extends React.Component {\n  render() {\n    const siteTitle = get(this, 'props.data.site.siteMetadata.title')\n    const posts = get(this, 'props.data.allContentfulArtCategory.edges')\n    const pageId = this.props.location.search.slice(1)\n    let post = posts.find(i => i.node.id === pageId) || posts[0]\n    post = post ? post.node : null\n\n    const arts = get(this, 'props.data.allContentfulArtPage.edges')\n    const pageArts = arts.filter(i => i.node.artCategory.id === pageId) || arts[0]\n\n    return (\n      <Layout location={this.props.location} >\n        <div style={{ background: '#fff' }}>\n          <Helmet title={siteTitle} />\n          <div className=\"wrapper\">\n            <h2 className=\"section-headline\">{post.name}</h2>\n            <ul className=\"article-list\">\n              {pageArts.map(({ node }) => {\n                return (\n                  <li key={node.id}>\n                    <Link to={`/art/${node.slug}`}>{node.title}</Link>\n                  </li>\n                )\n              })}\n            </ul>\n          </div>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default RootIndex\n\nexport const pageQuery = graphql`\n  query artSectionsQuery {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allContentfulArtCategory {\n      edges {\n        node {\n          id\n          name\n        }\n      }\n    }\n    allContentfulArtPage {\n      edges {\n        node {\n          id,\n          title,\n          slug\n          artCategory {\n            id,\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}